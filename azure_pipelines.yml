# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- main

pool:
  name: Default
  demands:
  - agent.name -equals win-docker

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: MSBuild@1
  inputs:
    solution: $(solution)
    configuration: $(buildConfiguration)
    msbuildLocationMethod: 'version'
    msbuildArguments: '/t:Rebuild /p:Configuration=Release /p:outdir=".\out\\"'

- task: PowerShellOnTargetMachines@3
  inputs:
    Machines: '10.0.0.5'
    UserName: 'jaroldan'
    UserPassword: 'Rollingstones01'
    InlineScript: 'Write-Output "Hello World"'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
       
      
       #Define clear text string for username and password
       [string]$userName = 'jaroldan'
       [string]$userPassword = 'Rollingstones01'

       #Convert to SecureString
       [securestring]$secStringPassword = ConvertTo-SecureString $userPassword -AsPlainText -Force

       [pscredential]$credObject = New-Object System.Management.Automation.PSCredential ($userName, $secStringPassword)


       $LocalPath =  "C:\repos\samplecopy\"
       $RemotePath = "C:\repos\"

       $TargetSession = New-PSSession -ComputerName 10.0.0.5 -Credential $credObject
            
       Copy-Item -Path $LocalPath -Destination $RemotePath -ToSession $TargetSession -Force -Recurse




#- task: CmdLine@2
#  displayName: Create Permissions
#  env:
#    USERNAME: jaroldan
#    PASSWORD: Rollingstones01
#  inputs:
         
#    script: |
#      $SECURE_PASSWORD = $PASSWORD | ConvertTo-SecureString -AsPlainText -Force
#      $CREDENTIAL = New-Object System.Management.Automation.PSCredential($USERNAME, $SECURE_PASSWORD)

#      export CREDENTIAL=$CREDENTIAL;
#      echo "##vso[task.setvariable variable=CREDENTIAL]$CREDENTIAL";

#- task: CmdLine@2
#  displayName: Create Permissions
#  inputs:
#    script: |
#      echo $CREDENTIAL;

      # - task: CmdLine@2
      #   displayName: Stop Application Pool
      #   env:
      #     ARM_CLIENT_SECRET: ${{ parameters.AZ_SERVICE_PRINCIPAL_PASSWORD }}
      #   inputs:
      #     workingDirectory: ${{ parameters.WORKING_DIRECTORY }}
      #     script: |
      #       Invoke-Command -ComputerName Ecbptsw62.uiotest.bpichinchatest.test -ScriptBlock { Start-WebAppPool -Name ".NET v2.0" } -credential $credential

      # - task: CmdLine@2
      #   displayName: Copy Site Files
      #   env:
      #     ARM_CLIENT_SECRET: ${{ parameters.AZ_SERVICE_PRINCIPAL_PASSWORD }}
      #   inputs:
      #     workingDirectory: ${{ parameters.WORKING_DIRECTORY }}
      #     script: |
      #       $Session = New-PSSession -ComputerName "Ecbptsw62.uiotest.bpichinchatest.test" -Credential $credential
      #       Copy-Item "$(Build.SourcesDirectory)/README.md" -Destination "C:/temp/" -ToSession $Session




#- task: CmdLine@2
#  displayName: Copy Site Files
#  inputs:
#    script: |
#        # Define clear text string for username and password
#        [string]$userName = 'jaroldan'
#        [string]$userPassword = 'Rollingstones01'

#        # Convert to SecureString
#        [securestring]$secStringPassword = ConvertTo-SecureString $userPassword -AsPlainText -Force

#        [pscredential]$credObject = New-Object System.Management.Automation.PSCredential ($userName, $secStringPassword)



#        $LocalPath =  "C:\repos\samplecopy\"
#        $RemotePath = "C:\repos\"

#        $TargetSession = New-PSSession -ComputerName 10.0.0.5 -Credential $credObject
              
#        Copy-Item -Path $LocalPath -Destination $RemotePath -ToSession $TargetSession -Force -Recurse
            






